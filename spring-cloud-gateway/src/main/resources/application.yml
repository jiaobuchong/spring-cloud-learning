spring:
  application:
    name: spring-cloud-gateway
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      #      不同的 id 对应不同的路由器，匹配到某一个就会走某个路由
      routes :
        - id: config_route
          predicates:
            - Path=/gateway/**
          filters:
            - StripPrefix=1
            - GpDefine=Hello Mic # 自定义的 filter，第一个值或第二个值按顺序向后排列
          uri: http://localhost:8001/
        - id: cookie_route
          predicates:  # nginx  location ~
            - Cookie=name,mic
          #            - Path=/define/**
          #            - Auth=Authorization,token
          #          filters:
          #            - StripPrefix=1
          uri: https://www.baidu.com/
        - id: my_diy_predicate_route
          predicates:
            - Path=/define/**
            - Auth=Authorization,token
          filters:
            - StripPrefix=1
          uri: https://www.baidu.com/
          # 通过 eureka-client 进行服务发现 load balance
        - id: lb_route
          predicates:
            - Path=/lb/**
          filters:
            - StripPrefix=1
          # http://localhost:8080/lb/order/create
          uri: lb://helloserver
        - id: ratelimiter_route
          predicates:
            - Path=/ratelimiter/**
          filters:
            - StripPrefix=1
            # filter 定义的第二种写法
            - name: RequestRateLimiter
              args:
                # 对于空的 key 是否进行拒绝
                deny-empty-key: true
                # 针对哪个 key 去进行拦截
                keyResolver: '#{@ipAddressKeyResolver}'
                # 令牌桶生成的速度，也就是每秒的请求数
                redis-rate-limiter.replenishRate: 1
                # 令牌桶容量，比如在服务低峰的时候，还会有很多令牌往桶里放，就会堆积
                redis-rate-limiter.burstCapacity: 2
          uri: lb://helloserver
      # 服务发现全局配置
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
server:
  port: 8080

# 服务发现的地址
eureka:
  client:
    service-url:
      defaultZone : http://127.0.0.1:10000/eureka/
management:
  endpoints:
    web:
      exposure:
        include: "*"